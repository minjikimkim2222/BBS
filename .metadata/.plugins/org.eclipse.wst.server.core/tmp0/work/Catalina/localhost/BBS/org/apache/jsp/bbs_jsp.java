/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.95
 * Generated at: 2024-01-02 13:03:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bbs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\n");
      out.write("	<meta HTTP-EQUIV=\"content-type\" CONTENT=\"text/html; CHARSET=UTF-8\" charset = \"UTF-8\"> <!--  클라이언트 문자 인코딩 방식  --> \n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("\n");
      out.write("\n");
      out.write("	<style>\n");
      out.write("		.my-container-fluid {\n");
      out.write("		/* background-color : skyblue; */\n");
      out.write("		text-align: right;\n");
      out.write("		\n");
      out.write("		}\n");
      out.write("	\n");
      out.write("	/*	\n");
      out.write("		.my-container {\n");
      out.write("			background-color : blue;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		.my-row {\n");
      out.write("			background-color : pink;\n");
      out.write("		} */\n");
      out.write("		\n");
      out.write("		table, th, td {\n");
      out.write("			border : 2px solid #dddddd;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		table {\n");
      out.write("		 	width : 100%;\n");
      out.write("\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		.button {\n");
      out.write("    	margin: 5px; /* 간격 조절 */\n");
      out.write("    	font-size: 14px; /* 글자 크기 조절 */\n");
      out.write("    	text-decoration: none;\n");
      out.write("    	display: inline-block;\n");
      out.write("    	border-radius: 3px;\n");
      out.write("    	\n");
      out.write("		padding: 5px 10px; /* 크기 조절 */\n");
      out.write("		background-color:  #4CAF50; /* Green */\n");
      out.write("		color: white;\n");
      out.write("		text-align: right;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		\n");
      out.write("	</style>\n");
      out.write("	<title>bbs 게시판 화면</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<!-- 게시판 메인 페이지 영역 시작  -->\n");
      out.write("\n");
      out.write("	<div class = \"my-container\">\n");
      out.write("		<div class = \"my-row\">\n");
      out.write("			<h3 style = \"text-align : center;\">게시판 메인</h3>\n");
      out.write("			\n");
      out.write("			<div class = \"my-container-fluid\">\n");
      out.write("				<table class = \"table table-striped\" style = \"text-align : center;\">\n");
      out.write("					<thead>\n");
      out.write("						<tr>\n");
      out.write("							<th style = \"background-color : #eeeeee\" >번호</th>\n");
      out.write("							<th style = \"background-color : #eeeeee\">제목</th>\n");
      out.write("							<th style = \"background-color : #eeeeee\">작성자</th>\n");
      out.write("							<th style = \"background-color : #eeeeee\">작성일</th>\n");
      out.write("						</tr>\n");
      out.write("					</thead>\n");
      out.write("					<tbody>\n");
      out.write("						<tr>\n");
      out.write("							<td width = \"25%\">1</td>\n");
      out.write("							<td width = \"25%\">안녕하세요</td>\n");
      out.write("							<td width = \"25%\">minjiki2</td>\n");
      out.write("							<td width = \"25%\">2024-01-01</td>\n");
      out.write("						</tr>\n");
      out.write("					</tbody>\n");
      out.write("				</table>	\n");
      out.write("			\n");
      out.write("			<!-- 글쓰기 버튼 생성, 버튼 누르면 write.jsp 페이지로 이동할 것 -->\n");
      out.write("				<a href = \"write.jsp\" class = \"button\">글쓰기</a>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
