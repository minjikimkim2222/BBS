package com.example.user;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

//전체조회하는 함수와 유저의 이름을 받아 상세조회하는 함수
public class UserDao {
	private String jdbcDriver = "com.mysql.cj.jdbc.Driver"; // 드라이버 로딩
	private String jdbcUrl = "jdbc:mysql://localhost:3306/testdb";
	private String user = "root";
	private String password = "olivia0929";

	// 전체조회하는 함수와 유저의 이름을 받아 상세조회하는 함수
	public ArrayList<User> selectList() {
		// 1. JDBC 드라이버 로딩
		try {
			Class.forName(jdbcDriver); // 드라이버 로딩
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}

		ArrayList<User> list = null; // 결과데이터를 담을 배열

		String sql = "SELECT * FROM user"; // sql문
		try {
			Connection connection = DriverManager.getConnection(jdbcUrl, user, password); // 2. DB 서버 연결
			Statement statement = connection.createStatement(); // 3. DB - java간 sql문 보낼 수 있게 통로 생성

			// 4. SQL문 실행
			ResultSet resultSet = statement.executeQuery(sql);

			list = new ArrayList<>();

			while (resultSet.next()) {
				String userId = resultSet.getString("id"); // id
				String userPw = resultSet.getString("password"); // password

				User dto = new User(userId, userPw);
				list.add(dto);

			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return (list);
	}
// user id를 받아서 user 데이터 가져오는 함수 

	public User selectUser(String userid) {
		try {
			Class.forName(jdbcDriver);

		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}

		String sql = "SELECT * FROM user WHERE id = ?";

		try {
			Connection connection = DriverManager.getConnection(jdbcUrl, user, password);
			PreparedStatement preparedStatement = connection.prepareStatement(sql);

			preparedStatement.setString(1, userid); // SELECT * FROM user WHERE id = userid;

			ResultSet resultSet = preparedStatement.executeQuery();

			while (resultSet.next()) {
				String userId = resultSet.getString("id");
				String userPw = resultSet.getString("password");

				return new User(userId, userPw);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}

		return (null); // 찾은 유저가 없는 경우 null 반환
	}

}