package com.example.bbs;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class BbsDao {
	private String jdbcUrl = "jdbc:mysql://localhost:3306/BBS"; // 프로토콜, 서버주소, 서버포트, DB이름
	private String dbId = "root";
	private String dbPwd = "olivia0929";

	private Connection conn;
	private ResultSet rs;

	// 기본 생성자 - DB 로딩 + DB와 이클립스 연결(Connection)
	public BbsDao() {
		try {
			Class.forName("com.mysql.jdbc.Driver");
			conn = DriverManager.getConnection(jdbcUrl, dbId, dbPwd);
		} catch (Exception ex) {
			System.out.println("연결 오류입니다. 오류 메세지 : " + ex.getMessage());
		}
	}

	// 작성 일자 리턴하는 메서드 - 글쓰기를 하는 현재 날짜와 시간 출력해주는 메서드
	public String getDate() {
		String sql = "select now()";

		try {
			PreparedStatement pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();

			if (rs.next()) {
				return rs.getString(1);
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		return ""; // 데이터베이스 오류
	}

	// 게시글 번호 부여 메서드
	public int getNext() {
		// 현재 게시글을 내림차순 정렬해, 가장 상위의 게시글 번호를 구한 뒤, 그 게시물 번호에 1을 더한 값을 새로 작성되는 게시글의 새 번호로
		// 부여할 것.

		String sql = "select bbsID from bbs order by bbsID desc";

		try {
			PreparedStatement pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();

			if (rs.next()) {
				return rs.getInt(1) + 1;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return -1; // 데이터베이스 오류
	}

	// 글쓰기 메서드
	public int write(String bbsTitle, String userID, String bbsContent) {
		// 매개변수로 글제목, 사용자ID, 글내용을 입력받고 실제 데이터베이스의 테이블 속성 순서에 맞게 데이터를 입력하는 메서드
		
	}
}
